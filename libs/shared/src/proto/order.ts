// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.2.5
//   protoc               v5.28.1
// source: proto/order.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'order';

export interface OrderRequest {
  orderId: string;
  productId: string;
  quantity: number;
}

export interface OrderResponse {
  orderId: string;
  productId: string;
  quantity: number;
  status: string;
}

export const ORDER_PACKAGE_NAME = 'order';

export interface OrderServiceClient {
  placeOrder(request: OrderRequest): Observable<OrderResponse>;
}

export interface OrderServiceController {
  placeOrder(
    request: OrderRequest,
  ): Promise<OrderResponse> | Observable<OrderResponse> | OrderResponse;
}

export function OrderServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['placeOrder'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('OrderService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('OrderService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const ORDER_SERVICE_NAME = 'OrderService';
